<?xml version="1.0" encoding="UTF-8"?>
<configuration>
<!--    优先级从高到低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL ；日志级别低的可以打印出日志级别高的级别的日志；
    例如 定义日志级别为debug则可以打印出日志级别info的日志  -->

    <!--定义日志文件的存储地址-->
<!--    <property name="LOG_HOME" value="${LOG_FILE_PATH:-.}" />-->
    <springProperty  name="LOG_HOME" source="log.path" defaultValue="C:/download/log"/>
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- info级别日志文件 -->
    <appender name="infoFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件的路径与名称,{yyyy-MM-dd.HH}精确到小时,则按小时分割保存-->
            <FileNamePattern>
                ${LOG_HOME}/info/logback-info.%d{yyyy-MM-dd}.log
            </FileNamePattern>
            <!-- 如果当前是按小时保存，则保存30小时内的日志 -->
            <!-- 保留30天日志 -->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            </Pattern>
        </layout>
    </appender>

    <!-- error级别日志文件 -->
    <appender name="errorFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件的路径与名称,{yyyy-MM-dd.HH}精确到小时,则按小时分割保存-->
            <FileNamePattern>
                ${LOG_HOME}/error/logback-error.%d{yyyy-MM-dd}.log
            </FileNamePattern>
            <!-- 如果当前是按小时保存，则保存30小时内的日志 -->
            <!-- 保留30天日志 -->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            </Pattern>
        </layout>
    </appender>


    <!-- sql日志文件 -->
    <appender name="sqlFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件的路径与名称,{yyyy-MM-dd.HH}精确到小时,则按小时分割保存-->
            <FileNamePattern>
                ${LOG_HOME}/sql/logback-sql.%d{yyyy-MM-dd}.log
            </FileNamePattern>
            <!-- 如果当前是按小时保存，则保存30小时内的日志 -->
            <!-- 保留30天日志 -->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
    </appender>

    <!--控制台所有日志，包含数据库sql日志-->
    <appender name="allFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ALL</level>
        </filter>
        <file>${LOG_HOME}/all/logback-all.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/all/logback-all.%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <MaxHistory>20</MaxHistory>
            <MaxFileSize>500MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>


<!--    <logger name="com.apache.ibatis" level="TRACE"/>-->
    <!-- 输出sql日志 -->
    <logger name="com.example.cp.mapper" level="DEBUG">
        <appender-ref ref="sqlFILE" />
        <appender-ref ref="infoFILE" />
    </logger>
<!--    <logger name="java.sql.Connection" level="DEBUG"/>-->
    <logger name="java.sql.Statement" level="DEBUG"/>

    <logger name="java.sql.PreparedStatement" level="DEBUG"/>


    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="infoFILE" />
        <appender-ref ref="errorFILE" />
        <appender-ref ref="allFILE" />
    </root>


</configuration>